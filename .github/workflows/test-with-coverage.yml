name: ci-build
on:
  push:
    branches:
    - master
    tags-ignore:
    - '*.*'
  pull_request_target:
    types: [ opened, synchronize, reopened, ready_for_review ]
    branches:
    - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    name: Test with coverage

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 0

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles ('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: |
        make build

    - name: Test
      run: |
        make test-with-coverage
    - name: Upload code coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./out/coverage/coverage.txt
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
